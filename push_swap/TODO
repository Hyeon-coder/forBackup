#1. 입력 처리 (input_parse.c)
#PDF 문서에도 입력 값 유효성 검사 및 에러 처리에 대한 언급이 있습니다.
#입력 값이 정수인지 확인, 범위 초과 및 중복 검사 후 유효한 값을 스택 A에 저장하는 부분이 명확히 정의되어 있습니다.

#2. 명령어 구현 (push_swap_utils.c)
#PDF에 명령어 설명이 동일하게 나와 있습니다. pa, pb, ra, rb 등은 작업 리스트와 일치합니다.

#3. 스택 유틸리티 (stack_utils.c)
#PDF 문서에서 스택 관련 함수나 메모리 관리에 대한 직접적인 언급은 없으나, 프로젝트 요구사항에 따라 추가 구현이 필요함을 암시합니다.

#4. 유틸리티 함수 (utils.c)
#작업 리스트에 ft_putstr_fd와 ft_atoi 구현이 명시되어 있으나, PDF에는 언급이 없습니다. 이는 사용자의 추가 정의로 보입니다.

5. 정렬 알고리즘 구현 (push_swap_algorithm.c)
PDF는 스택 A를 정렬하는 프로그램의 최적화 목표를 강조하며, 퀵소트와 같은 알고리즘 선택에 대한 직접적인 지침은 없습니다. 사용자 리스트의 세부 내용은 알고리즘 설계의 방향성을 잘 제시합니다.

6. 메인 함수 (main.c)
PDF에서도 메인 함수가 입력 처리 및 정렬 알고리즘 호출, 메모리 해제를 다룬다는 점에서 일치합니다.

7. Makefile
PDF 문서에 Makefile 규칙에 대한 명확한 지침이 있으며, 작업 리스트와 완전히 일치합니다.
#----------------------------------------------------------------------------------------------------------------------------------------------------
1. sa (swap a)
설명:
스택 A의 맨 위 두 값을 서로 교환합니다.
조건: 스택 A에 값이 1개 이하라면 아무 작업도 하지 않습니다.
2. sb (swap b)
설명:
스택 B의 맨 위 두 값을 서로 교환합니다.
조건: 스택 B에 값이 1개 이하라면 아무 작업도 하지 않습니다.
3. ss (swap a and b)
설명:
sa와 sb를 동시에 실행합니다.
스택 A와 스택 B의 맨 위 두 값을 각각 교환합니다.
조건: 각 스택에 값이 1개 이하라면 아무 작업도 하지 않습니다.
4. pa (push a)
설명:
스택 B의 맨 위 값을 스택 A로 이동시킵니다.
스택 B에서 값을 제거하고, 그 값을 스택 A의 맨 위에 추가합니다.
조건: 스택 B가 비어 있으면 아무 작업도 하지 않습니다.
5. pb (push b)
설명:
스택 A의 맨 위 값을 스택 B로 이동시킵니다.
스택 A에서 값을 제거하고, 그 값을 스택 B의 맨 위에 추가합니다.
조건: 스택 A가 비어 있으면 아무 작업도 하지 않습니다.
6. ra (rotate a)
설명:
스택 A의 모든 값을 한 칸 위로 이동합니다.
스택 A의 첫 번째 값이 스택 A의 마지막 값으로 이동합니다.
조건: 스택 A에 값이 1개 이하라면 아무 작업도 하지 않습니다.
7. rb (rotate b)
설명:
스택 B의 모든 값을 한 칸 위로 이동합니다.
스택 B의 첫 번째 값이 스택 B의 마지막 값으로 이동합니다.
조건: 스택 B에 값이 1개 이하라면 아무 작업도 하지 않습니다.
8. rr (rotate a and b)
설명:
ra와 rb를 동시에 실행합니다.
스택 A와 스택 B의 모든 값을 각각 한 칸 위로 이동합니다.
조건: 두 스택 모두 값이 1개 이하라면 아무 작업도 하지 않습니다.
9. rra (reverse rotate a)
설명:
스택 A의 모든 값을 한 칸 아래로 이동합니다.
스택 A의 마지막 값이 스택 A의 첫 번째 값으로 이동합니다.
조건: 스택 A에 값이 1개 이하라면 아무 작업도 하지 않습니다.
10. rrb (reverse rotate b)
설명:
스택 B의 모든 값을 한 칸 아래로 이동합니다.
스택 B의 마지막 값이 스택 B의 첫 번째 값으로 이동합니다.
조건: 스택 B에 값이 1개 이하라면 아무 작업도 하지 않습니다.
11. rrr (reverse rotate a and b)
설명:
rra와 rrb를 동시에 실행합니다.
스택 A와 스택 B의 모든 값을 각각 한 칸 아래로 이동합니다.
조건: 두 스택 모두 값이 1개 이하라면 아무 작업도 하지 않습니다.
